-- objetivos de la memoria virtual:
* aumentar el tamaño de memoria aparente (si)
* mejorar la forma de compartir memoria (si)
* mejorar el esquema de segurirad (si)
* aumentar el rendimiento del sistema (no)

-- comparando discos rigidos y memorias flash
* los discos rigidos son mas robustos (no)
* los discos rigidos son mas economicos (si)
* los discos rigidos tienen menor tiempo de acceso (no)
* los discos rigidos son de mayor consumo de energia (si)

-- para evitar los problemas de memoria virtual con DMA
* realizar transferencias de DMA limitadas dentro de paginas (si)
* utilizar TLB (no)
* configurar DMA con interrupciones (no)
* solicitar memoria contigua para operaciones con DMA (si)

-- En que fase de la ejecucion de una instruccion en un procesador multiciclo se calcula la direccion efectiva?
* En la tercera fase solo si se trara de una instruccion de acceso a la memoria (si)
* en la tercera fase para cualquier instruccion (no)
* siempre en la primera fase (no)
* durante la segunda fase para utilizarse en otras (no)

-- ¿Cual es el numero de registros de intersegmentos necesarios para implementar las etapas estudiadas de segmentacion del MIPS R2000?
* 4

-- ¿Que elementos debe modificar para agregar la instruccion nop al procesador MIPS implementando en forma uniciclo? (puede haber mas de una correcta)
* se debe realizar una modificacion a la ALU (no)
* se debe agregar una columna en la tabla verdad de la unidad de control (no)
* se debe alterar el datapath mediante un nuevo multiplexor que complete solo la suma de PC+4 (no)
* se debe modificar la tabla verdad de ALUop (no)
* se debe agregar una bifurcacion/arco que complete la operacion nop en el estado decode en la maquina de estado de la unidad de control (si)
* se debe agregar una fila en la tabla verdad de la unidad de control (si)
* se debe agregar un nuevo estado en la maquina de estado de la unidad de control (si)

-- en la implementacion multiciclo
* no se utiliza ciclo de captacion (no)
* todas las instrucciones duran el mismo tiempo (no)
* se utilizan multiples sumadores (no)
* es necesario un registro de instrucciones adicional (si)

-- señale las opciones correctas para la fase de decodificacion de un procesador multiciclo
* en ALUout queda la direccion de salto calculada en caso de ser una instruccion de salto condicional (si)
* la ALU realiza una suma (si)
* una de las fuentes de la ALU es el registro B (no)
* una de las fuentes de la ALU es el PC (si)
* una de las fuentes de la ALU es el registro A (no)

-- la unidad de control en un procesador multiciclo:
* depende del control de la ALU (no)
* se implementa mediante un automata (si)
* controla el registro ALUout (no)
* depende del registro de intrucciones (si)

-- la maquina de estado finito
* a lo sumo puede tener 7 estados (no)
* siempre es microprogramada (no)
* tiene siempre al menos 2 estados (si)
* es asincronica (no)

-- las instruccions lw en un procesador uniciclo:
* son de tipo R (no)
* nunca utilizan el PC (no)
* son de tipo I (si)
* sirven para cargar datos en la memoria (no)

-- ¿identifique las etapas de segmentacion estudiadas en el MIPS R2000?
* execute (si)
* instruction fetch (si)
* forward (no)
* white through (no)
* instruction match (no)

-- en un pipeline la productividad esta limitadda por:
* la cantidad de memoria direccionable (no)
* la cantidad de instrucciones del programa (no)
* la velocidad de la etapa mas lenta (si)

-- las instrucciones que operan entre registros en un procesador segmentado de 5 etapas ya pueden resolverse durante el 4to ciclo ¿solucion implementa MIPS R2000?
* hace forwarding (no)
* para el cause (no)
* retrasa la escritura en registros (si)
* ninguna de las anteriores (no)
* introduce una burbuja (no)

-- ¿cuales de las siguientes NO SON restricciones para la segmentacion de un procesador?
* etapas desequilibradas (no)
* el numero de etapas (no)
* tamaño de la palabra (si)
* la etapa mas rapida (si)
* la etapa mas lenta (no)

-- ¿que aplicaciones se adaptan mejor a la arquitectura de una GPU?
* inteligencia artificial (si)
* base de datos (no)
* compliladores (no)
* procesadores de texto (no)
* procesamiento de señales (si)
* algebra lineal (si)
* mecanica computacional (si)

-- ¿cuales de las siguientes son catacteristicas de la arquitectura de la GPU NVidia?
* comparte memoria con la CPU (no)
* reconoce el standar IEEE 754 (si)
* carga y control de flujo en dos etapas (si)
* el procesamiento se realiza individualmente por SP (no)
* soporta solo enteros (no)
* el procesamiento se realiza en bloques de SP (si)
* ninguna de las otras opciones (no)
* es orientada a flujos (si)

-- cuales son los desafios de la programacion GPU?
* es necesario comprender sobre shaders (si)
* es necesario un conocimiento profundo del harware grafico (no)
* se necesitan de estandards especiales como CUDA (si)
* es igual a la programacion de CPU (no)

-- cuales de las siguientes no es una limitacion de la GPU? (equicale a preguntar cual afirmacion es falsa)
* no se puede hacer una depuracion sencilla (no)
* no puede acceder directamente a la memoria del procesador (no)
* no se puede hacer uso en el codigo de la salida estandar (no)
* no se puede hacer calculo flotante (si)

-- ¿a que llamamos dependencia de verdad en un procesador superescalar?
* cuando se produce una bifurcacion en una de las vias (no)
* ninguna de las anteriores (no)
* cuando las unidades funcionales ya estan todas ocupadas (no)
* cuando se necesita un operando previamente que esta siendo calculado en otra via en ese momento (si)

-- ¿que tipos de paralemismo existen en bajo nivel (low level)?
* a nivel de codigo (no)
* no hay low level paralelsimo (no)
* a nivel de instruccion (si)
* a nivel de hilo (si)
* a nivel ALU (no)

-- un procesador que tiene instrucciones vectoriales como MMX se dice que pertenece a la taxonomia de Flynn:
* SIMD (si)
significa single instruction multiple data

-- el diagrama de jerarquia de memoria sirve para
* mostrar la relacion entre memoria y E/S programada, instrucciones y DMA (no)
* mostrar la relaccion eentre procesador, memoria y entrada-salida (no)
* mostra la relacion entre memoria de datos y programada (no)
* mostrar la relacion de compromiso entre velocidad, capacidad y coste (si)

-- el reemplazo de un bloque en la cache
* se da en mapeo directo cuando la posicion a usar esta usada (si)
* se da en mapeo directo cuando el bit dirty asi lo indica (no)
* se da en cache asociativas cuando la posicion a usar esta usada (no)
* se da en cache asociativas cuando el tamaño de bloque es mayor que una palabra (no)

-- el tiempo de penalizacion depende de
* el tamaño de la memoria principal (no)
* el tamaño de bloque (si)
* el tamaño de la cache (no)
* el programa en ejecucion (no)

-- en la memoria virtual paginada
* las paginas deben estar siempre en la memoria principal (no)
* las paginas son de tamaño fijo (si)
* los marcos de pagina deben poseer tamaño mayor al de la pagina (no)
* las paginas pueden aumentar de tamaño (no)

-- la memoria cache permite
* aumentar la eficiencia a la hora de acceder a entrada-salida (no)
* aprovechar la localidad espacial y temporal (si)
* aumentar la capacidad de la memoria principal (no)
* aumentra la efectividad de accesos a datos de la memoria principal (no)

-- la TLB
* permitir optimizar la traduccion de una direccion (si)
* premite aumentar la seguridad del sistema (no)
* permite aumentar el rendimiento de la memoria cache (no)
* permite evitar que la tabla de paginas aumente de tamaño (no)

-- E/S programada en relacion a interrupciones y DMA
* es compleja de implementar (no)
* es conveniente cuando el procesador no tiene otra tarea (si)
* requiere que el controlador de E/S lo soporte (no)
* e mas conveniente desde el punto de vista de un programa de usuario (no)

-- la direccion de retorno luego de una interrupcion en MIPS se almacena
* en RA y luego ouede ser salvada en la pila (no)
* en un registro especial y luego puede ser salvada en la pila (si)
* en la pila (no)
* es configurable por el SO (no)

-- el concepto de RAID permite
* incrementra la confidencialidad de los datos (no)
* restaurar una version anterior de los datos (no)
* mejorar la confiabilidad del sisetema de almacenamiento (si)
* mejorar los tiempos de acceso al sistema de almacenaiento (si)

-- identifique posibles soluciones a los riesgos por dependencia de datos:
* reestructurar la secuencia lecto/escritura de WB (si)
* reordenamiento del cogigo (si)
* detencion del reloj (no)
* insercion de nops (si)
* forward (si)
* stall (si)
* modificacion del ciclo de reloj (no)

-- la unidad de control en un procesador uniciclo:
* es una tabla verdad (si)
* esta microprogramada (no)
* no es ninguna de las anteriores (no)
* es una automata cableado (no)

-- en la implementacion MIPS de 5 etapas estudiada que tipo de riesgos de datos se presenta?
* WAW (no)
* RAW (si)
* WAR (no)

-- la tabla de paginas
* permite saber si la pagina ha sido actualizada en memoria principal (si)
* permite saber si la pagina es de tamaño fijo o variable (no)
* permite optimizar el uso de la cache (no)
* permite ubicar la pagina en la memoria secundaria (no)

-- ¿cual de los siguientes registros no esta en el banco de registros?
* zero (no)
* frame pointer (no)
* program counter (si)
* stack pointer (no)

-- al realizar una operacion de E/S con interrupciones
* debo tener presente que el rendimiento de la cache es menor (no)
* debo considerar que otro proceso puede pasar a ser ejecutado (si)
* debo teenr presente que es conveniente para operaciones de gran ancho de banda (no)
* debo considerar que el SO es el encargado de aldministrar la misma (si)

-- el registro ALUout sirve para guardar:
* el signo de la operaciones de comparacion (no)
* el valor del proximo PC (no)
* el resultado de las operaciones aritmeticas (si)
* la direccion efectiva de acceso para las instrucciones sw/lw (no)
* la direccion de salto condicional (no)

-- los controladores de E/S
* reducen la latenci de acceso al dispositivo de E/S (no)
* sircen de interfaz con el mundo exterior (no)
* permiten un acceso simple desde la perspectiva del procesador (si)
* presentan una serie de registros accesibles al procesador (si)

-- el acceso al controlador de E/S en MIPS
* se realiza siempre a traves de DMA (no)
* se realiza mediante un juego nuevo de instrucciones (no)
* se realiza mediante las mismas instrucciones que para acceder a memoria (si)
* se realiza desde espacio de usuario (no)

-- la asociatividad por conjunto
* a moyor cantidad de vias, el comportamiento es mas similar a la directa (no)
* permite tener una memoria cache mas rapida (no)
* es una solucion de compromiso entre mapeo directo y asociativo (si)
* el numero de vias debe ser menor que 4 (no)

-- que mejora tiene RAID 6 sobre RAID 5
* soporta la falla de dos discos (si)
* permite recuperarse de errores logicos (no)
* posee un disco para hot swap (no)
* permite reducir el tiempo de escritura (no)

-- el procesador uniciclo se distingue por:
* realizar la ejecucion de cada instruccion en un ciclo largo (si)
* tener instrucciones con diferentes ciclos de reloj (no)
* tener un registro especial MDR (no)
* tener un solo sumador para todas las operaciones (no)

-- Comparando buses E/S con los procesador memoria
* los buses E/S poseen mayor ancho de banda (no)
* los E/S soportan distancias mas largas (si)
* los buses E/S estan estandarisados (si)
* los buses E/S poseen mayor numero de lineas (no)

-- los bloques de la cache poseen
* direcciones en RAM (no)
* bit de validez (si)
* etiqueta (si)
* datos (si)

-- para permitir interrupciones anidadas
* se debe salvar el contenido de todos los registros en la pila (no)
* se debe salvar el contenido de los registros a usar en la pila (si)
* se debe salvar el EPC en la pila (si)
* se debe habilitar el manejo de interrupciones (si)

-- al realizar un operacion de E/S con DMA
* debo considerar que la memoria cache mejora el rendimiento de las operacion de E/S (no)
* debo considerar que las interrupciones no son necesarias (no)
* debo considerar que puedo tener inconvenientes con la memoria virtual (si)
* debo considerar qeu el bus y la memoria van a ser utilizados por el procesador (si)

-- la localizacion del bloque en una cache asociativa
* implica que cada bloque puede ser ubicado gracias a la etiqueta (si)
* implica que cada bloque puede ser ubicado en forma mas eficiente (no)
* implica que la cache posee bits de control (no)
* implica que cada bloque tiene tamaño fijo (no)

-- las instrucciones tipo R en un procesador uniciclo:
* utilizan todas las unidades funcinales (no)
* necesitan siempre de la ALU (si)
* acceden a la memoria de datos (no)

-- las instrucciones lw en un proocesador multiciclo:
* utilizan la unidad de extension de signo (no)
* son las que necesitan mayor cantidad de unidades funcionales (si)
* son las que menos tiempo ocupan (no)
* sirven para cargar la direccion de salto incondicional (no)

-- la tasa de fallo depende de
* el programa en ejecucion (si)
* el tamaño de bloque (si)
* el tamaño de la cache (si)
* el tamaño de la memoria principal (no)

|-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*|


























